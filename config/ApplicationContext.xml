<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"

	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd   
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd   
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 加载属性文件 -->
  	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置数据源的bean -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">  
        <property name="driverClassName" value="${jdbc.driver}"></property>  
        <property name="url" value="${jdbc.url}"></property>  
        <property name="username" value="${jdbc.username}"></property>  
        <property name="password" value="${jdbc.password}"></property>
        <!-- 初始创建连接的个数 -->
        <property name="initialSize" value="3"></property>
        <!-- 最多连接的个数 -->
        <property name="maxTotal" value="20"></property>
        <!-- 最少的空闲连接数 -->
        <property name="minIdle" value="2"></property>
        <!-- 最多的空闲连接数 -->  
        <property name="maxIdle" value="5"></property>  
        <!-- 最大等待连接时间，单位ms -->
        <property name="maxWaitMillis" value="500"></property>  
        
        <property name="defaultAutoCommit" value="true"></property>  
    </bean> 

	<!-- 配置SqlSessionFactory对象的bean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置dao实现类的bean -->
	<bean id="userDaoImpl" class="cn.wzd.ssm.dao.impl.UserDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<!--MapperScannerConfigurer配置
	这里需要注意三点：
      	第一，无需指定引用SqlSessionFactory，因为MapperScannerConfigurer在创建映射器时会通过自动装配的方式来引用。
      	第二，创建的映射器的命名问题。从xml文件中我们可以看出，我们没有办法给MapperScannerConfigurer创建的这些映射器
      		指定id或name属性，它们对我们似乎是不可见的。这个问题的解决之道在于采用了Spring针对自动侦测到的组件的默认命名策略，
      		亦即把类/接口名字的首字母小写，其他不变，作为映射器的名字。例如，映射器接口TeacherMapper被扫描后创建的映射
      		器bean名为teacherMapper。
      	第三，可以使用@Component注解给映射器指定名称.
      	第四，使用MapperScannerConfigurer时，如果mapper.java和mapper.xml在相同路径下则可以不设置mapper，见mybatis-config.xml
      		中<mappers/>标签。
	以下2个网址中对MapperScannerConfigurer的使用有一定的解释。
		1. http://www.mybatis.org/spring/zh/mappers.html#MapperScannerConfigurer
		2.http://legend2011.blog.51cto.com/3018495/980150
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
		<property name="basePackage" value="cn.wzd.ssm.mapper"></property>
	</bean>

</beans>


